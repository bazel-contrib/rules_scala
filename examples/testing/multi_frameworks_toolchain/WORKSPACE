workspace(name = "multi_frameworks_toolchain")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

skylib_version = "1.0.3"

http_archive(
    name = "bazel_skylib",
    sha256 = "1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c",
    type = "tar.gz",
    url = "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/{}/bazel-skylib-{}.tar.gz".format(skylib_version, skylib_version),
)

local_repository(
    name = "io_bazel_rules_scala",
    path = "../../..",
)

load("@io_bazel_rules_scala//:scala_config.bzl", "scala_config")

scala_config()

load(
    "@io_bazel_rules_scala//scala:scala.bzl",
    "rules_scala_setup",
    "rules_scala_toolchain_deps_repositories",
)

rules_scala_setup()

rules_scala_toolchain_deps_repositories(fetch_sources = True)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

load("@io_bazel_rules_scala//scala:toolchains.bzl", "scala_register_toolchains")

scala_register_toolchains()

load("@io_bazel_rules_scala//testing:scalatest.bzl", "scalatest_repositories")
load("@io_bazel_rules_scala//testing:junit.bzl", "junit_repositories")
load("@io_bazel_rules_scala//testing:specs2_junit.bzl", "specs2_junit_repositories")

scalatest_repositories()

junit_repositories()

specs2_junit_repositories()

register_toolchains(":testing_toolchain")
